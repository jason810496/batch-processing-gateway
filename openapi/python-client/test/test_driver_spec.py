# coding: utf-8

"""
    Batch Processing Gateway API

    Batch Processing Gateway API is a RESTful web service to submit, examine and delete Spark jobs.

    The version of the OpenAPI document: 2.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from bpg_api_client.models.driver_spec import DriverSpec

class TestDriverSpec(unittest.TestCase):
    """DriverSpec unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DriverSpec:
        """Test DriverSpec
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DriverSpec`
        """
        model = DriverSpec()
        if include_optional:
            return DriverSpec(
                cores = 56,
                core_request = '',
                core_limit = '',
                memory = '',
                memory_overhead = '',
                image = '',
                env = [
                    bpg_api_client.models.env_var.EnvVar(
                        name = '', 
                        value = '', )
                    ],
                annotations = {
                    'key' : ''
                    }
            )
        else:
            return DriverSpec(
        )
        """

    def testDriverSpec(self):
        """Test DriverSpec"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
